import { PageSpeedInsights } from './psi';
export declare type ValidationResult = 'PASS' | 'FAIL' | 'WARN';
export declare type ScoreResult = {
    value: number;
    printValue: string;
    status: ValidationResult;
};
export declare type PwaValidationResult = {
    readonly scores: {
        pwa: ScoreResult;
        performance: ScoreResult;
        accessibility: ScoreResult;
        largestContentfulPaint: ScoreResult;
        firstInputDelay: ScoreResult;
        cumulativeLayoutShift: ScoreResult;
    };
    readonly psiWebUrl: string;
    readonly status: ValidationResult;
};
/**
 * Validates if a Progressive Web App (PWA) passes the Quality Criteria to be used inside a Trusted
 * Web Activity.
 * PWAs are required to have a minimum Lighthouse performance score of 80 and a PWA score of 1.
 *
 * More information on the Quality criteria here:
 * -  https://web.dev/using-a-pwa-in-your-android-app/#quality-criteria
 */
export declare class PwaValidator {
    readonly psi: PageSpeedInsights;
    constructor(psi: PageSpeedInsights);
    /**
     * Triggers validation for an URL.
     * @param {URL} url the URL to be validated.
     * @returns {PwaValidationResult} the result of the validation.
     */
    validate(url: URL): Promise<PwaValidationResult>;
    /**
     * Rounds a value nearest multiple of multiple.
     * Examples:
     *  - roundToNearestMultiple(2549, 100) returns 2500
     *  - roundToNearestMultiple(2550, 100) returns 2600
     */
    private static roundToNearestMultiple;
    /**
     * A shortcut method to invoke PwaBuilder#validate with the default PageSpeedInsight
     * implementation.
     * @param url the URL to be validated.
     * @returns {PwaValidationResult} the result of the validation.
     */
    static validate(url: URL): Promise<PwaValidationResult>;
    getStatus(value: number, minPassScore: number, minWarnScore: number): ValidationResult;
}
