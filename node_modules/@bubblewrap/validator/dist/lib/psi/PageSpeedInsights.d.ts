import { PsiResult } from './PsiResult';
export declare type PsiStrategy = 'desktop' | 'mobile';
export declare type PsiCategory = 'accessibility' | 'best-practices' | 'performance' | 'pwa' | 'seo';
/**
 * A wrapper for a request to the PageSpeed Ingights API.
 */
export declare class PsiRequest {
    readonly url: URL;
    /**
     * Builds a new PsiRequest;
     * @param url the full URL of the PSI endpoint, with parameters
     */
    constructor(url: URL);
}
/**
 * Builds requests for the PSI endpoint. A full list of parameters is available at
 * https://developers.google.com/speed/docs/insights/v5/reference/pagespeedapi/runpagespeed
 */
export declare class PsiRequestBuilder {
    private url;
    /**
     * Constructs a new PsiRequestBuilder instance
     * @param validationUrl the URL to be validated
     */
    constructor(validationUrl: URL);
    /**
     * Sets the URL to be validated
     * @param url the URL to be validated
     */
    setUrl(url: URL): PsiRequestBuilder;
    /**
     * Sets the strategy to use when validating a PWA.
     * @param {PsiStrategy} strategy
     */
    setStrategy(strategy: PsiStrategy): PsiRequestBuilder;
    /**
     * Adds a category to be added when generating the PSI report.
     * @param {PsiCategory} category
     */
    addCategory(category: PsiCategory): PsiRequestBuilder;
    /**
     * Builds a PsiRequest using the parameters in this builder.
     * @returns {PsiRequest}
     */
    build(): PsiRequest;
}
/**
 * A Wrapper for the PageSpeedInsights API.
 *
 * More information on the API is available at:
 * - https://developers.google.com/speed/docs/insights/v5/get-started
 */
export declare class PageSpeedInsights {
    runPageSpeedInsights(request: PsiRequest): Promise<PsiResult>;
}
