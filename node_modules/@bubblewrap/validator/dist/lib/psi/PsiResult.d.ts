export declare type LighthouseCategoryName = 'accessibility' | 'best-practices' | 'performance' | 'pwa' | 'seo';
export declare type LighthouseEmulatedFormFactor = 'desktop' | 'mobile';
export declare type LighthouseCategory = {
    id: LighthouseCategoryName;
    title: string;
    description: string;
    manualDescription: string;
    score: number;
};
export declare type LighthouseCategories = {
    [key in LighthouseCategoryName]: LighthouseCategory;
};
export declare type LighthouseMetricAudit = {
    firstContentfulPaint: number;
    largestContentfulPaint: number;
    maxPotentialFID: number;
    cumulativeLayoutShift: number;
};
export declare type LighthouseMetricsAudit = {
    id: string;
    title: string;
    description: string;
    details: {
        type: string;
        items: LighthouseMetricAudit[];
    };
};
export declare type PsiLighthouseResult = {
    requestedUrl: string;
    finalUrl: string;
    lighthouseVersion: string;
    userAgent: string;
    fetchTime: string;
    environment: {
        networkUserAgent: string;
        hostUserAgent: string;
        benchmarkIndex: number;
    };
    configSettings: {
        emulatedFormFactor: LighthouseEmulatedFormFactor;
        locale: string;
        onlyCategories: LighthouseCategoryName[];
        channel: string;
    };
    audits: {
        metrics: LighthouseMetricsAudit;
    };
    categories: LighthouseCategories;
    timing: {
        total: number;
    };
};
/**
 * Defines the types from the PageSpeed Insights API response, relevant to the Trusted Web Activity
 * validation. A comprehensive documentation on fields available for the API response is available
 * at https://developers.google.com/speed/docs/insights/v5/reference/pagespeedapi/runpagespeed#response_1.
 */
export declare type PsiResult = {
    captchaResult: string;
    kind: string;
    id: string;
    loadingExperience: {
        initial_url: string;
    };
    lighthouseResult: PsiLighthouseResult;
    analysisUTCTimestamp: string;
    version: {
        major: number;
        minor: number;
    };
};
